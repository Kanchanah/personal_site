test_y <- as.matrix(y_all[-train_ind])
#train
y<-ifelse(y>0,1,-1)
#test
test_y<-ifelse(test_y>0,1,-1)
rho <- 1
lambda <- 1/rho
#train
N <-dim(x)[1]
#test
N_test <- dim(test_x)[1]
#starting number
beta <- matrix(0,p,1)
v<-matrix(0,N,1)
r<-matrix(0,N,1)
b_0<-0
l<- matrix(1,N,1)
beta_old <- matrix(0,p,1)
Niter <- 100
start_time <- Sys.time()
for (iter in 1:Niter){
inv<-solve(((2*lambda*diag(p) + rho*t(c(y)*x)%*%(c(y)*x))))
beta <- t(- (t(c(y)*x)%*%v + rho*t(c(y)*x)%*%(r-l+c(y)*(b_0*l))))%*%inv
beta <- t(beta)
if (iter>1){
if ((norm(beta)-norm(beta_old))<1e-4) {
break
}
}
beta_0 <- -(t(y)%*%v + rho * t(y)%*%(r-l+(c(y)*(x%*%beta_old))))/(as.numeric((p*t(y)%*%y)))
beta_0=as.numeric(beta_0)
z <- - ((l+v)/rho) +l+ c(y)*(x%*%beta+beta_0*l)
for (i in 1:N){
if (z[i] >= lambda){
r[i]<-z[i]-lambda
}else if (abs(z[i])<=lambda){
r[i]<-0
}else if (z[i]<--lambda){
r[i]<-z[i]+lambda
}
}
v<-v+ rho*( r-l+c(y)*(x%*%beta+beta_0*l))
beta_old=beta
}
end_time <- Sys.time()
y_new_in <-test_x%*%beta
y_new_in<-ifelse(y_new_in>0,1,-1)
check <- y_new_in==test_y
a<-sum(check==TRUE)
accuracy <- a/N_test
accuracy
N_all=80
p=100
beta=rep(1,p)
beta[seq(10,p,20)]=2
#create correlation matrix
cov = outer(1:p, 1:p, function(x,y) 0.5^abs(x-y))
set.seed(1234)
x_all=mvrnorm(N_all, rep(0,p),cov)
y_all=x_all%*%beta+rnorm(N_all,0,1)
#creates training and test dataset
smp_size <- floor(0.75 * nrow(x_all))
train_ind <- sample(seq_len(nrow(x_all)), size = smp_size)
x<- x_all[train_ind,]
y <- as.matrix(y_all[train_ind])
test_x<- x_all[-train_ind,]
test_y <- as.matrix(y_all[-train_ind])
#train
y<-ifelse(y>0,1,-1)
#test
test_y<-ifelse(test_y>0,1,-1)
rho <- 1
lambda <- 1/rho
#train
N <-dim(x)[1]
#test
N_test <- dim(test_x)[1]
#starting number
beta <- matrix(0,p,1)
v<-matrix(0,N,1)
r<-matrix(0,N,1)
b_0<-0
l<- matrix(1,N,1)
beta_old <- matrix(0,p,1)
Niter <- 100
start_time <- Sys.time()
for (iter in 1:Niter){
inv<-solve(((2*lambda*diag(p) + rho*t(c(y)*x)%*%(c(y)*x))))
beta <- t(- (t(c(y)*x)%*%v + rho*t(c(y)*x)%*%(r-l+c(y)*(b_0*l))))%*%inv
beta <- t(beta)
if (iter>1){
if ((norm(beta)-norm(beta_old))<1e-4) {
break
}
}
beta_0 <- -(t(y)%*%v + rho * t(y)%*%(r-l+(c(y)*(x%*%beta_old))))/(as.numeric((p*t(y)%*%y)))
beta_0=as.numeric(beta_0)
z <- - ((l+v)/rho) +l+ c(y)*(x%*%beta+beta_0*l)
for (i in 1:N){
if (z[i] >= lambda){
r[i]<-z[i]-lambda
}else if (abs(z[i])<=lambda){
r[i]<-0
}else if (z[i]<--lambda){
r[i]<-z[i]+lambda
}
}
v<-v+ rho*( r-l+c(y)*(x%*%beta+beta_0*l))
beta_old=beta
}
end_time <- Sys.time()
y_new_in <-test_x%*%beta
y_new_in<-ifelse(y_new_in>0,1,-1)
check <- y_new_in==test_y
a<-sum(check==TRUE)
accuracy <- a/N_test
accuracy
plot(p,Accuracy,type="l",xlab="Number of features",ylab="Accuracy Rate",main="Accuracy Rate",col="red")
lines(p,Accuracy_SVM,type="l",col="blue")
legend(150, 0.92,c("ADMM","SVM"),lty=c(1,1),lwd=c(2,2),col=c("red","blue"))
plot(p,Accuracy,type="l",xlab="Number of features",ylab="Accuracy Rate",main="Accuracy Rate",col="red")
lines(p,Accuracy_SVM,type="l",col="blue")
legend(150, 0.92,c("ADMM","SVM"),lty=c(1,1),lwd=c(2,2),col=c("red","blue"))
N=80
p=100
beta=rep(1,p)
beta[seq(10,p,20)]=2
#create correlation matrix
cov = outer(1:p, 1:p, function(x,y) 0.5^abs(x-y))
x=mvrnorm(N, rep(0,p),cov)
y=x%*%beta+rnorm(N,0,1)
y<-ifelse(y>0,1,-1)
rho <- 1
lambda <- 1/rho
#starting number
beta <- matrix(0,p,1)
v<-matrix(0,N,1)
r<-matrix(0,N,1)
b_0<-0
l<- matrix(1,N,1)
beta_old <- matrix(0,p,1)
l_p <- matrix(1,p,1)
Niter <- 100
start_time <- Sys.time()
for (iter in 1:Niter){
inv<-solve(((2*lambda*diag(p) + rho*t(c(y)*x)%*%(c(y)*x))))
beta <- t(- (t(c(y)*x)%*%v + rho*t(c(y)*x)%*%(r-l+c(y)*(b_0*l))))%*%inv
beta <- t(beta)
if (iter>1){
if ((norm(beta)-norm(beta_old))<1e-4) {
break
}
}
beta_0 <- -(t(y)%*%v + rho * t(y)%*%(r-l+(c(y)*(x%*%beta_old))))/(as.numeric((p*t(y)%*%y)))
beta_0=as.numeric(beta_0)
z <- - ((l+v)/rho) +l+ c(y)*(x%*%beta+beta_0*l)
for (i in 1:N){
if (z[i] >= lambda){
r[i]<-z[i]-lambda
}else if (abs(z[i])<=lambda){
r[i]<-0
}else if (z[i]<--lambda){
r[i]<-z[i]+lambda
}
}
v<-v+ rho*( r-l+c(y)*(x%*%beta+beta_0*l))
beta_old=beta
}
end_time <- Sys.time()
y_new_in <-x%*%beta
y_new_in<-ifelse(y_new_in>0,1,-1)
check <- y_new_in==y
a<-sum(check==TRUE)
accuracy <- a/N
accuracy
time<- end_time-start_time
Accuracy <- c(0.925, 0.9, 1, 1, 1)
p <- c(10, 50, 100, 150, 200)
plot(p,Accuracy,type="l",col="red",main="Accuracy Rate",xlab="Number of features selected",ylab="Accuracy Rate")
fit=svm(y~x)
predicted <- predict(fit, x)
y_svm <- ifelse(predicted>0,1,-1)
check_svm <- y_svm==y
a_svm<-sum(check_svm==TRUE)
accuracy_svm <- a_svm/N
accuracy_svm
Accuracy_SVM <- c(0.9875, 1, 1, 1, 1)
p <- c(10, 50, 100, 150, 200)
plot(p,Accuracy,type="l",xlab="Number of features",ylab="Accuracy Rate",main="Accuracy Rate",col="red")
lines(p,Accuracy_SVM,type="l",col="blue")
legend(150, 0.92,c("ADMM","SVM"),lty=c(1,1),lwd=c(2,2),col=c("red","blue"))
#simulate a dataset
N_all=80
p=1000
beta=rep(1,p)
beta[seq(10,p,20)]=2
#create correlation matrix
cov = outer(1:p, 1:p, function(x,y) 0.5^abs(x-y))
set.seed(1234)
x_all=mvrnorm(N_all, rep(0,p),cov)
y_all=x_all%*%beta+rnorm(N_all,0,1)
#creates training and test dataset
smp_size <- floor(0.75 * nrow(x_all))
train_ind <- sample(seq_len(nrow(x_all)), size = smp_size)
x<- x_all[train_ind,]
y <- as.matrix(y_all[train_ind])
test_x<- x_all[-train_ind,]
test_y <- as.matrix(y_all[-train_ind])
#train
y<-ifelse(y>0,1,-1)
#test
test_y<-ifelse(test_y>0,1,-1)
rho <- 1
lambda <- 1/rho
#train
N <-dim(x)[1]
#test
N_test <- dim(test_x)[1]
#starting number
beta <- matrix(0,p,1)
v<-matrix(0,N,1)
r<-matrix(0,N,1)
b_0<-0
l<- matrix(1,N,1)
beta_old <- matrix(0,p,1)
Niter <- 100
start_time <- Sys.time()
for (iter in 1:Niter){
inv<-solve(((2*lambda*diag(p) + rho*t(c(y)*x)%*%(c(y)*x))))
beta <- t(- (t(c(y)*x)%*%v + rho*t(c(y)*x)%*%(r-l+c(y)*(b_0*l))))%*%inv
beta <- t(beta)
if (iter>1){
if ((norm(beta)-norm(beta_old))<1e-4) {
break
}
}
beta_0 <- -(t(y)%*%v + rho * t(y)%*%(r-l+(c(y)*(x%*%beta_old))))/(as.numeric((p*t(y)%*%y)))
beta_0=as.numeric(beta_0)
z <- - ((l+v)/rho) +l+ c(y)*(x%*%beta+beta_0*l)
for (i in 1:N){
if (z[i] >= lambda){
r[i]<-z[i]-lambda
}else if (abs(z[i])<=lambda){
r[i]<-0
}else if (z[i]<--lambda){
r[i]<-z[i]+lambda
}
}
v<-v+ rho*( r-l+c(y)*(x%*%beta+beta_0*l))
beta_old=beta
}
end_time <- Sys.time()
y_new_in <-test_x%*%beta
y_new_in<-ifelse(y_new_in>0,1,-1)
check <- y_new_in==test_y
a<-sum(check==TRUE)
accuracy <- a/N_test
accuracy
time<- end_time-start_time
time
iter
Accuracy <- c(0.95, 0.8, 0.85, 0.7, 0.6)
p <- c(10, 50, 100, 200, 500)
plot(p,Accuracy,type="l",col="red",main="Accuracy Rate",xlab="Number of features selected",ylab="Accuracy Rate")
install.packages("e1071")
library(e1071)
fit <- svm(y~x,data=x)
svm.pred  <- predict(fit, x)
y_svm_in<-ifelse(svm.pred>0,1,-1)
check <- y_svm_in==y
install.packages("e1071")
accuracy
y
test_y
test_x<
test_x
dim(x)
dim(y)
dim(text())
dim(text_x)
dim(test_x)
a
N_all=80
p=1000
beta=rep(1,p)
beta[seq(10,p,20)]=2
#create correlation matrix
cov = outer(1:p, 1:p, function(x,y) 0.5^abs(x-y))
set.seed(1234)
x_all=mvrnorm(N_all, rep(0,p),cov)
y_all=x_all%*%beta+rnorm(N_all,0,1)
#creates training and test dataset
smp_size <- floor(0.75 * nrow(x_all))
train_ind <- sample(seq_len(nrow(x_all)), size = smp_size)
x<- x_all[train_ind,]
y <- as.matrix(y_all[train_ind])
test_x<- x_all[-train_ind,]
test_y <- as.matrix(y_all[-train_ind])
#train
y<-ifelse(y>0,1,-1)
#test
test_y<-ifelse(test_y>0,1,-1)
rho <- 1
lambda <- 1/rho
#train
N <-dim(x)[1]
#test
N_test <- dim(test_x)[1]
#starting number
beta <- matrix(0,p,1)
v<-matrix(0,N,1)
r<-matrix(0,N,1)
b_0<-0
l<- matrix(1,N,1)
beta_old <- matrix(0,p,1)
Niter <- 100
start_time <- Sys.time()
for (iter in 1:Niter){
inv<-solve(((2*lambda*diag(p) + rho*t(c(y)*x)%*%(c(y)*x))))
beta <- t(- (t(c(y)*x)%*%v + rho*t(c(y)*x)%*%(r-l+c(y)*(b_0*l))))%*%inv
beta <- t(beta)
if (iter>1){
if ((norm(beta)-norm(beta_old))<1e-4) {
break
}
}
beta_0 <- -(t(y)%*%v + rho * t(y)%*%(r-l+(c(y)*(x%*%beta_old))))/(as.numeric((p*t(y)%*%y)))
beta_0=as.numeric(beta_0)
z <- - ((l+v)/rho) +l+ c(y)*(x%*%beta+beta_0*l)
for (i in 1:N){
if (z[i] >= lambda){
r[i]<-z[i]-lambda
}else if (abs(z[i])<=lambda){
r[i]<-0
}else if (z[i]<--lambda){
r[i]<-z[i]+lambda
}
}
v<-v+ rho*( r-l+c(y)*(x%*%beta+beta_0*l))
beta_old=beta
}
end_time <- Sys.time()
y_new_in <-test_x%*%beta
y_new_in<-ifelse(y_new_in>0,1,-1)
check <- y_new_in==test_y
a<-sum(check==TRUE)
accuracy <- a/N_test
accuracy
install.packages("e1071")
library(e1071)
install.packages("e1071")
install.packages("cancerdata")
install.packages("stepwiseCM")
install.packages("KMsurv")
library(KMsurv)
data(kidney)
data
kidney
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Personal_site/Kanchanah_Site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Personal_site/Kanchanah_Site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Personal_site/Kanchanah_Site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Personal_site/Kanchanah_Site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Personal_site/Kanchanah_Site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Personal_site/Kanchanah_Site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Personal_site/Kanchanah_Site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Site/personal_site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Site/personal_site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Site/personal_site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Site/personal_site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Site/personal_site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Site/personal_site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Site/personal_site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Site/personal_site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Site/personal_site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Site/personal_site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Site/personal_site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Site/personal_site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Site/personal_site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Site/personal_site")
#render your sweet site.
rmarkdown::render_site()
#Set our working directory.
#This helps avoid confusion if our working directory is
#not our site because of other projects we were
#working on at the time.
setwd("/Users/Kanchanah/Documents/Site/personal_site")
#render your sweet site.
rmarkdown::render_site()
